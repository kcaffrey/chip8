jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      beta:
        rustup_toolchain: beta
      nightly:
        rustup_toolchain: nightly
  steps:
  - ${{ if ne(parameters.name, 'Windows') }}:
    # Linux and macOS.
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: Install rust
  - ${{ if eq(parameters.name, 'Linux') }}:
    # Linux
    - script: |
        sudo apt-get -qq update && sudo apt-get install -y libasound2-dev
        wget http://libsdl.org/release/SDL2-2.0.5.tar.gz && tar -xzvf SDL2-2.0.5.tar.gz \
            && pushd SDL2-2.0.5 && ./configure --prefix=/usr && make && sudo make install && popd
      displayName: Install alsa and SDL
  - ${{ if eq(parameters.name, 'macOS') }}:
    # macOS
    - script: |
       brew update && brew install sdl2
  - ${{ if eq(parameters.name, 'Windows') }}:
    # Windows.
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: Install rust (windows)
  # All platforms.
  - script: |
        rustc -Vv
        cargo -V
    displayName: Query rust and cargo versions
  - script: cargo install -f cargo-make
    displayName: Install cargo-make
  - script: cargo make ci-flow
    env: { CARGO_MAKE_RUN_CODECOV: true }
    displayName: Build and run tests
